# -*- coding: utf-8 -*-
"""Deep_learning assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bcwHO1bRYcRUHg0oeEEVSwZyHq13OFJP

# **Load the Dataset**
"""

import pandas as pd

# Load dataset
df = pd.read_csv('AirPassengers (1).csv')
df.columns = ['Month', 'Passengers']
df['Month'] = pd.to_datetime(df['Month'])
df.set_index('Month', inplace=True)
print(df.head())

"""# Normalize the Data"""

from sklearn.preprocessing import MinMaxScaler
import numpy as np

scaler = MinMaxScaler()
scaled_data = scaler.fit_transform(df[['Passengers']])

"""# Preparing the Data for LSTM"""

def create_sequences(data, time_step=12):
    X, y = [], []
    for i in range(len(data) - time_step):
        X.append(data[i:i+time_step])
        y.append(data[i+time_step])
    return np.array(X), np.array(y)

time_step = 12
X, y = create_sequences(scaled_data, time_step)

# Reshape input to [samples, time steps, features] for LSTM
X = X.reshape(X.shape[0], X.shape[1], 1)

"""# Build the LSTM Model"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

model = Sequential()
model.add(LSTM(50, return_sequences=True, input_shape=(time_step, 1)))
model.add(LSTM(50))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mean_squared_error')

"""# Build the LSTM Model"""

model.fit(X, y, epochs=100, batch_size=16, verbose=1)

"""# Make Predictions"""

predicted = model.predict(X)
predicted = scaler.inverse_transform(predicted)
actual = scaler.inverse_transform(y.reshape(-1, 1))

"""# Visualize the Results"""

import matplotlib.pyplot as plt

plt.plot(actual, label='Actual Passengers')
plt.plot(predicted, label='Predicted Passengers')
plt.legend()
plt.title("LSTM Forecasting on Air Passengers Dataset")
plt.show()